Brute Force -->

class Solution {
    // Function to find the leaders in the array.
  public:
    vector<int> leaders(vector<int>& arr) {
        
        vector<int> ans;
        int n = arr.size();
        
        for(int i=0;i<n;i++){
            bool flag = false;
            for(int j=i+1;j<n;j++){
                if(arr[i] < arr[j]){
                    flag = true;
                    break;
                }
            }
            if(flag == false)
                    ans.push_back(arr[i]);
        }
        
        return ans;
        
    }
};

Optimal Solution --> 

class Solution {
    // Function to find the leaders in the array.
  public:
    vector<int> leaders(vector<int>& arr) {
        
        int n = arr.size();
        int max = arr[n-1];
        vector<int> ans;
        ans.push_back(arr[n-1]);
        
        for(int i=n-2;i>=0;i--){
            if(arr[i] >= max){
                ans.push_back(arr[i]);
                max = arr[i];
            }
        }
        
        reverse(ans.begin(),ans.end());
        
        return ans;
        
    }
};
